@model Infraestructure.Models.Pedido

@{
    ViewBag.Title = "Pedido";
}

@{ 
    string nombre = "Usuario";
    string email = "Perfil";
    int idUsuario = 0;

    Infraestructure.Models.Usuario oUsuario;
    //Validar si existe en la sesión
    if (Session["User"] != null)
    {
        oUsuario = (Infraestructure.Models.Usuario)Session["User"];
        if (oUsuario != null)
        {
            nombre = $"{oUsuario.Nombre}";
            email = oUsuario.Contra;
            idUsuario = oUsuario.IdUsuario;
        }
    }
}

<h2>Orden de Pulseras</h2>
@using (Html.BeginForm("Save", "Orden", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label>Usuario</label>
                </div>
                <div class="form-group">
                    <label>@idUsuario</label>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FechaHora, htmlAttributes: new { @class = "col-form-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.FechaHora, htmlAttributes: new { @class = "form-control", @Value = DateTime.Now.ToString("yyyy-MM-dd"), @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.FechaHora, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>
    </div>

    <hr />
    <span class="glyphicons glyphicons-hand-left"></span>
    <div id="resultadoDetalle">
        @if (Web.ViewModel.Carrito.Instancia.Items.Count() > 0)
        {
            @Html.Partial("~/Views/Orden/_DetalleOrden.cshtml", (List<Web.ViewModel.ViewModelPedidoProducto>)ViewBag.DetalleOrden)
        }
        else
        {
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                La orden no tiene pulseras asignadas
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }

    </div>
    <hr />
    <!-- Submit -->
    <button type="submit" class="btn btn-success float-right" id="btnOrdenar">
        <span class="glyphicon  glyphicon-floppy-save"></span>
        Guardar
    </button>
}
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryajax")

    <script type="text/javascript">

        //Actualizar cantidad de pulseras en el carrito
        //Cambio de cantidad en caja de texto
        function updateCantidad(ctr) {
            var txtCantidad = $(ctr);
            var cantidad = txtCantidad.val();
            var id = txtCantidad.data("pulseraid");
            $.ajax({
                type: "GET",
                dataType: 'text',
                url: "/Orden/actualizarCantidad",
                data: { "idPulsera": id, "cantidad": cantidad },
                success: function (data) {
                    $("#resultadoDetalle").html('');
                    $("#resultadoDetalle").html(data);
                    updateCantLibros();
                }, error: function (xhr, status, error) {
                    console.log("Error: " + error + ", No Error: " + xhr.status);
                },
            });
        }
        //Actualizar cantidad de pulseras en el menú
        function updateCantLibros() {
            $.ajax({
                type: "GET",
                dataType: 'text',
                url: "/Orden/actualizarOrdenCantidad",
                success: function (data) {
                    $("#cantidadLibros").html('');
                    $("#cantidadLibros").html(data);
                }, error: function (xhr, status, error) {
                    console.log("Error: " + error + ", No Error: " + xhr.status);
                },
            });
        }


    </script>
}

