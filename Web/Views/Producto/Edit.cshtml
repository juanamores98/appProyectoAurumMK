@model Infraestructure.Models.Producto

@{
    ViewBag.Title = "Mantenimiento Producto";
}
<div class="row" style="margin-left: 0px !important; margin-right: 0px !important;">
    <div class="col-lg-3" style="background: #1d2554;">
        @Html.Partial("_MenuMantenimiento")
    </div>
    <div class="col-xl-9">
        <div class="container">
            <hr>
            <h1>Editar Producto  <span class="badge bg-info">@Html.DisplayFor(model => model.IdProducto)</span>| @Html.ActionLink("Detalle", "Details", new { id = Model.IdProducto }, new { @class = "btn  boton-estilo" })| @Html.ActionLink("Desactivar", "Deactivate", new { id = Model.IdProducto }, new { @class = "btn  boton-estilo" })</h1>
            <hr>
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h5 class="text-primary m-0 fw-bold">Producto</h5>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Save", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            <div class="row" style="margin-left: 15px !important; margin-right: 0px !important;">
                                <div class="col">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.IdProducto)
                                    <div class="row">
                                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="row">
                                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="row">
                                        @Html.LabelFor(model => model.CostoU, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="row">
                                        @Html.EditorFor(model => model.CostoU, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CostoU, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="row">
                                        @Html.LabelFor(model => model.IdCategoriaProducto, htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="row">
                                        @Html.DropDownListFor(model => model.IdCategoriaProducto,
                                        (SelectList)ViewBag.listaSeleccionCategoriaProducto,
                                        "Seleccione una categoría",
                                        htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.IdCategoriaProducto, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-1">
                                </div>
                                <div class="col">
                                    <div class="row">
                                        @Html.LabelFor(model => model.Imagen, htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="row">
                                        <input type="image" src="data:image/jpeg;charset=utf-8;base64,@Convert.ToBase64String(Model.Imagen)" id="ImagenProducto" style="height:125px;width:125px">
                                    </div>
                                    <div class="row">
                                        @Html.Label("Añadir y cambiar la imagen", htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="row">
                                        <!--Html.HiddenFor(model => model.Imagen)-->
                                        <input type="file" name="ImageFile"  />
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="row" style="margin-left: 15px !important; margin-right: 0px !important;">
                                <div class="col">
                                    <div class="row">
                                        @Html.LabelFor(model => model.InventarioProducto, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="row">
                                        @Html.DropDownList("seleccionInventarios",
                                        (MultiSelectList)ViewBag.listaSeleccionInventario,
                                        "Seleccione inventarios",
                                        new { htmlAttributes = new { @class = "form-control" }, multiple = "multiple" })
                                        @Html.ValidationMessageFor(model => model.InventarioProducto, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="row">
                                        @Html.LabelFor(model => model.Proveedor, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="row">
                                        @Html.DropDownList("seleccionProveedores",
                                        (MultiSelectList)ViewBag.listaSeleccionProveedor,
                                        "Seleccione proveedores",
                                        new { htmlAttributes = new { @class = "form-control" }, multiple = "multiple" })
                                        @Html.ValidationMessageFor(model => model.Proveedor, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="row">
                                        @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="row">
                                        @Html.DropDownList("seleccionColores",
                                            (MultiSelectList)ViewBag.listaSeleccionColor,
                                            "Seleccione colores",
                                            new { htmlAttributes = new { @class = "form-control" }, multiple = "multiple" })
                                        @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <hr />

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Editar Producto" class="btn boton-estilo" />
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
            <div>
                @Html.ActionLink("Regresar a lista", "Index", null, new { @class = "btn  boton-estilo" })
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
